/* Base styling for overall layout */
.container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    width: 100%;
    min-height: 100vh; /* Ensure the layout takes at least the full height of the viewport */
    margin: 10px; /* Reset any default margin */
    padding: 10px; /* Reset any default padding */
}

.chatRoot {
    display: flex;
    flex-direction: row;
    align-items: stretch;
    width: 80%;
    height: 100%;
    overflow: hidden;
    padding-top: 20px;
}
.commandsContainer {
    display: flex; /* Establishes this container as a flex container */
    flex-direction: row; /* Aligns children (commands) horizontally */
    justify-content: flex-end; /* Aligns items to the right side of the container */
    width: 100%; /* Ensures the container spans the full width of its parent */
    padding-right: 20px; /* Adds some padding on the right for spacing from the edge */
}

.importantNoteContainer {
    background-color: #fffbcc; /* Light yellow background for visibility */
    border-left: 4px solid #ffcc00; /* Contrasting left border */
    padding: 20px; /* Sufficient padding for readability */
    margin: 20px 0; /* Vertical margin for spacing */
    display: flex;
    align-items: center; /* Aligns icon with text */
}

/* Ensure chat container and analysis panel share the screen equally when both are visible */
@media (min-width: 768px) {
    .chatRoot {
        display: flex;
        flex-direction: row;
        width: 100%;
        height: 100vh;
        justify-content: center;
        align-items: stretch;
        padding-top: 20px;
    }

    .chatContainer,
    .chatAnalysisPanel {
        flex: 1; /* Allocate equal space to both containers */
        min-width: 0;
        flex-direction: column;
        overflow: auto;
        height: 100%;
    }

    .chatContainer {
        margin-right: 10px; /* Optional: Add some space between the two panels */
    }

    .chatAnalysisPanel {
        margin-left: 10px; /* Optional: Add some space between the two panels */
    }
}

/* Responsive and adaptive chat message stream */
.chatMessageStream {
    max-height: calc(100vh - 40px);
    overflow-y: auto;
    width: 100%;
    padding-left: 24px;
    padding-right: 24px;
    display: flex;
    flex-direction: column;
}

.chatMessageGpt {
    margin-bottom: 20px;
    max-width: 100%;
    display: flex;
    min-width: initial;
}

.chatMessageGptMinWidth {
    max-width: 100%;
    margin-bottom: 20px;
    min-width: initial;
}

.chatInput {
    position: sticky;
    bottom: 0;
    flex: 0 0 100px;
    padding-top: 12px;
    padding-bottom: 24px;
    padding-left: 24px;
    padding-right: 24px;
    width: 100%;
    background: #f2f2f2;
}

/* Additional responsive adjustments for mobile screens */
@media (max-width: 767px) {
    .chatContainer,
    .chatAnalysisPanel {
        width: 100%; /* Full width for smaller screens */
        max-width: none; /* Remove max-width constraint */
    }

    /* Adjust layout for mobile to stack chat and analysis panels */
    .chatRoot {
        flex-direction: column;
        width: 100%;
    }
}
